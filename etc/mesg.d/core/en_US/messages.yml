#     ___    ____  __    ___   _________
#    /   |  / _  |/ /   / / | / /__  __/           Source Code Static Analyzer
#   / /| | / / / / /   / /  |/ /  / /                   AdLint - Advanced Lint
#  / __  |/ /_/ / /___/ / /|  /  / /
# /_/  |_|_____/_____/_/_/ |_/  /_/   Copyright (C) 2010-2014, OGIS-RI Co.,Ltd.
#
# This file is part of AdLint.
#
# AdLint is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# AdLint is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# AdLint.  If not, see <http://www.gnu.org/licenses/>.
#
#
# Default message catalog of core package for en_US locale.
#
#                      *********************************
#                      ***** DO NOT EDIT THIS FILE *****
#                      *********************************
#
# To override default messages, edit `change_list' section of the traits file.
#
# [Example]
#
# % tail traits.yml
# message_traits:
#   change_list:
#     W9999:
#       package: "c_builtin"
#       classes:
#         - "REL:A10"
#         - "PRT:B20"
#       format: "Your custom message for the warning of W9999."
#     X9999:
#       package: "core"
#       classes:
#         - "ERR:X99"
#       format: "Your custom message for the fatal error of X9999."
#     E9999:
#       package: "core"
#       classes:
#         - "ERR:X99"
#       format: "Your custom message for the error of E9999."

version: "3.2.5"

message_definition:
  X0001:
    classes:
      - "ERR:X99"
    format: "An unknown exception `%s' is found."
  X0002:
    classes:
      - "ERR:X99"
    format: "An illegal message ID `%s:%s' is found."
  X0003:
    classes:
      - "ERR:X99"
    format: "Analysis processing has been stopped due to unrecoverable error. For the details, refer to `%s' and `%s'."
  X0004:
    classes:
      - "ERR:X99"
    format: "An illegal message format `%s' is found."
  E0001:
    classes:
      - "ERR:X99"
    format: "An identifier is required in this position."
  E0002:
    classes:
      - "ERR:X99"
    format: "A comma is required in this position."
  E0003:
    classes:
      - "ERR:X99"
    format: "Invalid token is found behind identifier list (identifier_list)."
  E0004:
    classes:
      - "ERR:X99"
    format: "Corresponding #endif doesn't found."
  E0005:
    classes:
      - "ERR:X99"
    format: "#else group (else_group) must describe after #elif group (elif_groups)."
  E0006:
    classes:
      - "ERR:X99"
    format: "Syntax error is found in token `%s'."
  E0007:
    classes:
      - "ERR:X99"
    format: "Syntax error is found in conditional expression token `%s'. Conditional expression evaluate as false."
  E0008:
    classes:
      - "ERR:X99"
    format: "Syntax error is found in token `%s'."
  E0009:
    classes:
      - "ERR:X99"
    format: "A header file of <%s> doesn't found."
  E0010:
    classes:
      - "ERR:X99"
    format: "A header file of \"%s\" doesn't found."
  E0011:
    classes:
      - "ERR:X99"
    format: "Syntax error is found under analysis of <%s>."
  E0012:
    classes:
      - "ERR:X99"
    format: "Syntax error is found under analysis of \"%s\"."
  E0013:
    classes:
      - "ERR:X99"
    format: "Statement cannot include in syntax."
  E0014:
    classes:
      - "ERR:X99"
    format: "'&&' monadic operator to get a label address is GCC original add-on."
  E0015:
    classes:
      - "ERR:X99"
    format: "'goto' statement with specified label address is GCC original add-on."
  E0016:
    classes:
      - "ERR:X99"
    format: "Unfinished comment block is found."
  E0017:
    classes:
      - "ERR:X99"
    format: "#include expects \"filename\" or <filename>."
  E0018:
    classes:
      - "ERR:X99"
    format: "Extra semicolon appears in the global scope."
